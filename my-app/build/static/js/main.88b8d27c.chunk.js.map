{"version":3,"sources":["Phonetic.js","Synonyms.js","Meaning.js","Results.js","Photos.js","pen.png","gnome.png","Dictionary.js","App.js","reportWebVitals.js","index.js"],"names":["Phonetic","props","className","href","phonetic","audio","target","rel","text","Synonyms","synonyms","map","synonym","index","Meaning","meaning","definitions","definition","number","partOfSpeech","example","Results","results","word","phonetics","meanings","Photos","photos","id","photo","src","original","landscape","alt","photographer","Dictionary","useState","defaultKeyword","keyword","setKeyword","setResults","loaded","setLoaded","setPhotos","handleDictionResponse","response","data","handlePexelsResponse","search","apiUrl","axios","get","then","pexelsApiUrl","headers","Authorization","pen","class","onSubmit","event","preventDefault","type","onChange","value","defaultValue","gnome","width","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.88b8d27c.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default function Phonetic(props) {\n  return (\n    <div className=\"Phonetic\">\n      <a href={props.phonetic.audio} target=\"_blank\" rel=\"noreferrer\">\n        Listen\n      </a>{\" \"}\n      &nbsp;\n      <span className=\"text\">{props.phonetic.text}</span>\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport default function Synonyms(props) {\n  if (props.synonyms) {\n    return (\n      <ul className=\"Synonyms\">\n        {props.synonyms.map(function (synonym, index) {\n          return <li key={index}> {synonym},</li>;\n        })}\n      </ul>\n    );\n  } else {\n    return null;\n  }\n}\n","import React from \"react\";\nimport Synonyms from \"./Synonyms\";\n\nexport default function Meaning(props) {\n  return (\n    <div className=\"Meaning\">\n      {props.meaning.definitions.map(function (definition, index) {\n        let number = index + 1;\n        return (\n          <div key={index}>\n            <br />\n            <div className=\"definition\">\n              {number}. <i> ({props.meaning.partOfSpeech}) </i> &nbsp;\n              {definition.definition}\n            </div>\n\n            <div className=\"example\">{definition.example}</div>\n            <Synonyms synonyms={definition.synonyms} />\n            <br />\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n","import React from \"react\";\nimport Phonetic from \"./Phonetic\";\nimport Meaning from \"./Meaning\";\n\nexport default function Results(props) {\n  if (props.results) {\n    return (\n      <div className=\"Results\">\n        <section>\n          <br />\n          <p className=\"searchedfor\"> You searched for: </p>\n          <h2>{props.results.word}</h2>\n          <a href=\"#photos\"> See photos </a>\n          {props.results.phonetics.map(function (phonetic, index) {\n            return (\n              <div key={index}>\n                <Phonetic phonetic={phonetic} />\n              </div>\n            );\n          })}\n        </section>\n        {props.results.meanings.map(function (meaning, index) {\n          return (\n            <section key={index}>\n              <Meaning meaning={meaning} />\n            </section>\n          );\n        })}\n      </div>\n    );\n  } else {\n    return null;\n  }\n}\n","import React from \"react\";\n\nexport default function Photos(props) {\n  if (props.photos) {\n    return (\n      <section className=\"Photos\">\n        <div className=\"row\" id=\"photos\">\n          {props.photos.map(function (photo, index) {\n            return (\n              <div className=\"col-4\" key={index}>\n                <a href={photo.src.original} target=\"_blank\" rel=\"noreferrer\">\n                  <img\n                    src={photo.src.landscape}\n                    className=\"img-fluid\"\n                    alt={photo.src.photographer}\n                  />\n                </a>\n              </div>\n            );\n          })}\n        </div>\n      </section>\n    );\n  } else {\n    return null;\n  }\n}\n","export default __webpack_public_path__ + \"static/media/pen.7dad0dab.png\";","export default __webpack_public_path__ + \"static/media/gnome.4662bc1f.png\";","import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport Results from \"./Results\";\nimport Photos from \"./Photos\";\nimport pen from \"./pen.png\";\nimport gnome from \"./gnome.png\";\n\nexport default function Dictionary(props) {\n  let [keyword, setKeyword] = useState(props.defaultKeyword);\n  let [results, setResults] = useState(null);\n  let [loaded, setLoaded] = useState(false);\n  let [photos, setPhotos] = useState(null);\n\n  function handleDictionResponse(response) {\n    setResults(response.data[0]);\n  }\n\n  function handlePexelsResponse(response) {\n    setPhotos(response.data.photos);\n  }\n\n  function search() {\n    // documentation: https://dictionaryapi.dev/e\n    let apiUrl = `https://api.dictionaryapi.dev/api/v2/entries/en_US/${keyword}`;\n    axios.get(apiUrl).then(handleDictionResponse);\n\n    let pexelsApiKey =\n      \"563492ad6f91700001000001fdd29f0808df42bd90c33f42e128fa89\";\n    let pexelsApiUrl = `https://api.pexels.com/v1/search?query=${keyword}&per_page=9`;\n    let headers = { Authorization: `Bearer ${pexelsApiKey}` };\n    axios.get(pexelsApiUrl, { headers: headers }).then(handlePexelsResponse);\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    search();\n  }\n\n  function handleKeywordChange(event) {\n    setKeyword(event.target.value);\n  }\n\n  function load() {\n    setLoaded(true);\n    search();\n  }\n\n  if (loaded) {\n    return (\n      <div className=\"Dictionary\">\n        <section>\n          <br />\n          <img src={pen} alt=\"pen\" class=\"pen\" />\n          <h1 className=\"header\">Claire's dictionary</h1> <br />\n          <hr className=\"lookupword\" />\n          <br />\n          <form onSubmit={handleSubmit}>\n            <input\n              type=\"search\"\n              onChange={handleKeywordChange}\n              defaultValue=\"gorilla\"\n            />\n          </form>\n          <div className=\"hint\">\n            try these words: sunset, gorilla, cat;\n            <br /> <br />\n          </div>\n        </section>\n        <Results results={results} />\n        <Photos photos={photos} />\n        <hr className=\"lookupword\" />\n        <footer>\n          <img src={gnome} width=\"80px\" alt=\"gnome\" />\n          This project was coded by{\" \"}\n          <a\n            href=\"https://www.clairenicholsondigital.co.uk/\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            class=\"footer\"\n          >\n            Claire Nicholson\n          </a>{\" \"}\n          and is{\" \"}\n          <a\n            href=\"https://github.com/shecodesio/dictionary\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            class=\"footer\"\n          >\n            open-sourced on GitHub\n          </a>{\" \"}\n          and{\" \"}\n          <a\n            href=\"https://shecodes-dictionary.netlify.app/\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            class=\"footer\"\n          >\n            hosted on Netlify\n          </a>\n        </footer>\n      </div>\n    );\n  } else {\n    load();\n    return \"Loading\";\n  }\n}\n","import \"./App.css\";\nimport Dictionary from \"./Dictionary\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Dictionary defaultKeyword=\"gorilla\" />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n// Put any other imports below so that CSS from your\n// components takes precedence over default styles.\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}